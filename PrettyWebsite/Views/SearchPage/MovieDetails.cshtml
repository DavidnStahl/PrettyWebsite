@model PrettyWebsite.Models.ViewModels.Pages.MoviePageViewModel
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@{
    var stars = 0;
}

<div class="card mb-4">
    <img src="@Model.Movie.Poster" alt="">
    <div class="container mb-4 mt-4">

        <h4><b>@Model.Movie.Title (@Model.Movie.Year)</b></h4>
        <p><strong>Genre:</strong> @Model.Movie.Genre</p>
        <p><strong>Director:</strong> @Model.Movie.Director</p>
        <p><strong>Actors:</strong> @Model.Movie.Actors</p>
        <p><strong>Plot:</strong> @Model.Movie.Plot</p>
        <p>
            <strong>Ratings:</strong><br />
            @foreach (var item in Model.Ratings)
            {
                @item.Source @: @item.Value<br />
            }
        </p>
        <p><strong>Duration:</strong> @Model.Movie.Runtime</p>
    </div>


    @if (Model.movieList.FirstOrDefault(x => x.Contains(Model.Movie.imdbID)) == null)
    {
        @Html.PropertyFor(m => m.CurrentPage.ContentArea, new { Id = Model.Movie.imdbID })
    }

    @if (Model.ReviewList.Count > 0)
    {
        <div class="container text-dark bg-warning">
            <div class="row">
                <div>
                    <h1 class="text-center mt-3 mb-3">Reviews</h1>

                    @foreach (var review in Model.ReviewList)
                    {
                        stars = 0;
                        <div class="list-group">
                            <div class="list-group-item">

                                <div class="col-md-11 text">
                                    <div class="col-md-4"><h4 class="list-group-item-heading text-center"> <strong>Author:</strong> @review.Name</h4></div>
                                    <div class="col-md-4"><h4 class="list-group-item-heading text-center"> @review.PublicationDate</h4></div>
                                    <div class="col-md-4"><h4 class="list-group-item-heading text-xs-center"> @review.ReviewRating.ToString() <small> votes </small></h4></div>
                                    <div class="list-group-item-text mt-4 mb-4">
                                        <p>@review.Text</p>
                                    </div>
                                </div>

                                <div class="col-md-1 mt-4 mb-4">
                                    @if (Model.reviewRatedList.FirstOrDefault(x => x.Contains(@review.Id.ToString())) == null)
                                    {
                                        <button type="button" class="btn btn-success btn-lg btn-block" onclick="rating('up','@review.Id.ToString()','@Model.Movie.imdbID.ToString()')"><i class="fa fa-thumbs-up"></i></button>
                                        <button type="button" class="btn btn-danger btn-lg btn-block" onclick="rating('down','@review.Id.ToString()','@Model.Movie.imdbID.ToString()')"><i class="fa fa-thumbs-down"></i></button>
                                    }
                                    else
                                    {
                                        <button type="button" class="disabled btn btn-success btn-lg btn-block" onclick="rating('up','@review.Id.ToString()','@Model.Movie.imdbID.ToString()')"><i class="fa fa-thumbs-up"></i></button>
                                        <button type="button" class="disabled btn btn-danger btn-lg btn-block" onclick="rating('down','@review.Id.ToString()','@Model.Movie.imdbID.ToString()')"><i class="fa fa-thumbs-down"></i></button>
                                    }

                                </div>
                                <div class="col-md-3 text-left">

                                    @for (int i = 0; i < Convert.ToInt32(@review.Rating); i++)
                                    {
                                        <span class="float-left fa fa-star checked"></span>
                                        stars++;
                                    }

                                    @for (int i = stars; i < 6; i++)
                                    {
                                        <i class="float-left fa fa-star-o unChecked" aria-hidden="true"></i>
                                    }
                                </div>
                            </div>


                        </div>

                    }

                </div>

            </div>
        </div>
    }


    <div class="mt-4 mb-4 text-center">
        @Html.ActionLink("Back to Search", "Index", null, htmlAttributes: new { @class = "btn btn-warning" })
    </div>
</div>

        <script>


            function rating(value, id, movieId) {
                var url = '/Search/ReviewRating?id=' + id + '&rating=' + value + '&movieId=' + movieId;
                window.location.href = ('/Search/ReviewRating?id=' + id + '&rating=' + value + '&movieId=' + movieId);
            }

        </script>
